/* This file is automatically generated from RemoteMonitor.Interface, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null. Don't modify it. */
using System;
using System.Collections.Generic;
using EGL;
using EGL.Communication;

namespace RemoteMonitor
{
	[ServiceInterface(Type = typeof(IRemoteMonitor))]
	public interface IRemoteMonitorImpl
	{
		void UpdateData(Session session, RemoteMonitor.ClientData data);
	}
	public class IRemoteMonitorStub : StubBase
	{
		public IRemoteMonitorStub()
		{
			AddMethodDispatcher(1, UpdateData_1);
		}

		static byte[] UpdateData_1(object __serviceObj, Session __client, BinaryStreamReader __reader)
		{
			var __timer = TimeCounter.BeginNew();
			IRemoteMonitorImpl __service = (IRemoteMonitorImpl)__serviceObj;
			BinaryStreamWriter __output = new BinaryStreamWriter();
			RemoteMonitor.ClientData data;
			__reader.Read(out data);
		#if (DEBUG || LOG_PROTOCOL)
			Log.Debug("UpdateData");
			Log.Append(" data: {0}", Log.ObjToString(data));
		#endif
			__service.UpdateData(__client, data);
			ProtocolStatistic.AddItem("IRemoteMonitor.UpdateData", (int)__timer.End());
			__output.Write(0);
			return __output.BuildSendBuffer();
		}
	}
}
